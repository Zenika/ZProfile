version: 2.1

executors:
  front:
    docker:
      - image: circleci/node
  hasura:
    docker:
      - image: hasura/graphql-engine:v1.3.2.cli-migrations-v2
  rust:
    docker:
      - image: circleci/rust

commands:
  setup-rust-cache:
    steps:
      - run:
          name: Install sccache
          working_directory: api
          command: |
            cargo install sccache
            echo 'export "RUSTC_WRAPPER"="sccache"' >> $BASH_ENV
            echo 'export "SCCACHE_CACHE_SIZE"="5G"' >> $BASH_ENV
            sccache --version
  restore-rust-cache:
    steps:
      - restore_cache:
          name: Restore sccache cache
          working_directory: api
          key: sccache-cache-stable-{{ arch }}-{{ .Environment.CIRCLE_JOB }}
  save-rust-cache:
    steps:
      - save_cache:
          name: Save sccache cache
          working_directory: api
          key: sccache-cache-stable-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ epoch }}
          paths:
            - "~/.cache/sccache"

jobs:
  hasura-test-apply-migrations:
    executor: hasura
    steps:
      - checkout
      - run:
          name: migrate
          working_directory: hasura
          command: hasura migrate apply
      - run:
          name: metadata
          working_directory: hasura
          command: hasura metadata apply
      - run:
          name: seeds
          working_directory: hasura
          command: hasura seeds apply
  front-install-dependencies:
    executor: front
    steps:
      - checkout
      - restore_cache:
          working_directory: front
          keys:
            - v1-packaging-front-dependencies-{{ checksum "package-lock.json" }}
            - v1-packaging-front-dependencies-
      - run:
          name: install-dependencies
          working_directory: front
          command: npm ci
      - save_cache:
          working_directory: front
          paths:
            - ./node_modules
          key: v1-packaging-front-dependencies-{{ checksum "package-lock.json" }}
  front-qc-prettier:
    executor: front
    steps:
      - checkout
      - restore_cache:
          working_directory: front
          keys:
            - v1-packaging-front-dependencies-{{ checksum "package-lock.json" }}
            - v1-packaging-front-dependencies-
      - run:
          working_directory: front
          name: qc-prettier
          command: npm run prettier:check
  front-build:
    executor: front
    steps:
      - checkout
      - restore_cache:
          working_directory: front
          keys:
            - v1-packaging-front-dependencies-{{ checksum "package-lock.json" }}
            - v1-packaging-front-dependencies-
      - run:
          name: build
          working_directory: front
          command: npm run build
  front-unit-test:
    executor: front
    steps:
      - checkout
      - restore_cache:
          working_directory: front
          keys:
            - v1-packaging-front-dependencies-{{ checksum "package-lock.json" }}
            - v1-packaging-front-dependencies-
      - run:
          name: unit-test
          working_directory: front
          command: npm test
  front-integration-test:
    executor: front
    steps:
      - checkout
      - restore_cache:
          working_directory: front
          keys:
            - v1-packaging-front-dependencies-{{ checksum "package-lock.json" }}
            - v1-packaging-front-dependencies-
      - run:
          name: integration-test
          working_directory: front
          command: npm run cypress:run
  api-build-and-test:
    executor: rust
    steps:
      - checkout
      - setup-rust-cache
      - restore-rust-cache
      - run:
          name: test
          working_directory: api
          command: cargo test
      - save-rust-cache

workflows:
  qc-test-depoy:
    jobs:
      - hasura-test-apply-migrations
      - front-install-dependencies
      - front-qc-prettier:
          requires:
            - front-install-dependencies
      - front-build:
          requires:
            - front-install-dependencies
      - front-unit-test:
          requires:
            - front-install-dependencies
      - front-integration-test:
          requires:
            - front-install-dependencies
      - api-build-and-test
