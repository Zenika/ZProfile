- table:
    schema: public
    name: Agency
  array_relationships:
  - name: UserAgencies
    using:
      foreign_key_constraint_on:
        column: agency
        table:
          schema: public
          name: UserAgency
  select_permissions:
  - role: world
    permission:
      columns:
      - name
      filter: {}
      allow_aggregations: true
- table:
    schema: public
    name: Skill
  object_relationships:
  - name: Topic
    using:
      foreign_key_constraint_on: topicId
  array_relationships:
  - name: TechnicalAppetites
    using:
      foreign_key_constraint_on:
        column: skillId
        table:
          schema: public
          name: TechnicalAppetite
  - name: UserSkills
    using:
      foreign_key_constraint_on:
        column: skillId
        table:
          schema: public
          name: UserSkill
- table:
    schema: public
    name: TechnicalAppetite
  object_relationships:
  - name: Skill
    using:
      foreign_key_constraint_on: skillId
  - name: User
    using:
      foreign_key_constraint_on: userEmail
- table:
    schema: public
    name: Topic
  array_relationships:
  - name: Skills
    using:
      foreign_key_constraint_on:
        column: topicId
        table:
          schema: public
          name: Skill
- table:
    schema: public
    name: User
  array_relationships:
  - name: TechnicalAppetites
    using:
      foreign_key_constraint_on:
        column: userEmail
        table:
          schema: public
          name: TechnicalAppetite
  - name: UserAgencies
    using:
      foreign_key_constraint_on:
        column: userEmail
        table:
          schema: public
          name: UserAgency
  - name: UserSkills
    using:
      foreign_key_constraint_on:
        column: userEmail
        table:
          schema: public
          name: UserSkill
  insert_permissions:
  - role: world
    permission:
      check:
        email:
          _eq: x-hasura-user-email
      columns:
      - agency
      - email
      backend_only: false
  select_permissions:
  - role: world
    permission:
      columns:
      - agency
      - email
      filter: {}
      allow_aggregations: true
  update_permissions:
  - role: world
    permission:
      columns:
      - agency
      - email
      filter:
        email:
          _eq: x-hasura-user-email
      check:
        email:
          _eq: x-hasura-user-email
- table:
    schema: public
    name: UserAgency
  object_relationships:
  - name: Agency
    using:
      foreign_key_constraint_on: agency
  - name: User
    using:
      foreign_key_constraint_on: userEmail
  insert_permissions:
  - role: world
    permission:
      check:
        userEmail:
          _eq: x-hasura-user-email
      columns:
      - agency
      - updatedAt
      - userEmail
      backend_only: false
  select_permissions:
  - role: world
    permission:
      columns:
      - agency
      - updatedAt
      - userEmail
      filter: {}
      allow_aggregations: true
- table:
    schema: public
    name: UserSkill
  object_relationships:
  - name: Skill
    using:
      foreign_key_constraint_on: skillId
  - name: User
    using:
      foreign_key_constraint_on: userEmail
